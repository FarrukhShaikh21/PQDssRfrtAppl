package pqt.dss.rfrt.model.eo;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;

import java.sql.Timestamp;

import java.sql.Types;

import javax.faces.context.ExternalContext;
import javax.faces.context.FacesContext;

import javax.servlet.http.HttpSession;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.BlobDomain;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.DBTransaction;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jul 19 17:22:23 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DssReqResigTermHeaderImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        RfrtHeaderIdPk,
        AgentNoFk,
        RankCodeFk,
        ManagerIdFk,
        BranchCodeFk,
        RegionCodeFk,
        JoiningDate,
        LastRankDate,
        MonthSalaryDrawn,
        CurrentQtr,
        YearToDate,
        ActiveConsultants,
        RequestType,
        Remarks,
        RequestReason,
        ResignationLetter,
        UserIdFk,
        EnterDate,
        LastUpdatedBy,
        LastUpdatedDate,
        BranchStatus,
        DssStatus,
        BranchNotifIdFk,
        DssNotifIdFk,
        PersonType,
        ResignationFile,
        FileContentType,
        RfrtDocNo,
        AgentStipend,
        WorkflowNotificationId,
        WorkflowStatus,
        PlanTransferHdrIdFk,
        GisLocationIdFk,
        DssReqResigTermLine;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int RFRTHEADERIDPK = AttributesEnum.RfrtHeaderIdPk.index();
    public static final int AGENTNOFK = AttributesEnum.AgentNoFk.index();
    public static final int RANKCODEFK = AttributesEnum.RankCodeFk.index();
    public static final int MANAGERIDFK = AttributesEnum.ManagerIdFk.index();
    public static final int BRANCHCODEFK = AttributesEnum.BranchCodeFk.index();
    public static final int REGIONCODEFK = AttributesEnum.RegionCodeFk.index();
    public static final int JOININGDATE = AttributesEnum.JoiningDate.index();
    public static final int LASTRANKDATE = AttributesEnum.LastRankDate.index();
    public static final int MONTHSALARYDRAWN = AttributesEnum.MonthSalaryDrawn.index();
    public static final int CURRENTQTR = AttributesEnum.CurrentQtr.index();
    public static final int YEARTODATE = AttributesEnum.YearToDate.index();
    public static final int ACTIVECONSULTANTS = AttributesEnum.ActiveConsultants.index();
    public static final int REQUESTTYPE = AttributesEnum.RequestType.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int REQUESTREASON = AttributesEnum.RequestReason.index();
    public static final int RESIGNATIONLETTER = AttributesEnum.ResignationLetter.index();
    public static final int USERIDFK = AttributesEnum.UserIdFk.index();
    public static final int ENTERDATE = AttributesEnum.EnterDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int BRANCHSTATUS = AttributesEnum.BranchStatus.index();
    public static final int DSSSTATUS = AttributesEnum.DssStatus.index();
    public static final int BRANCHNOTIFIDFK = AttributesEnum.BranchNotifIdFk.index();
    public static final int DSSNOTIFIDFK = AttributesEnum.DssNotifIdFk.index();
    public static final int PERSONTYPE = AttributesEnum.PersonType.index();
    public static final int RESIGNATIONFILE = AttributesEnum.ResignationFile.index();
    public static final int FILECONTENTTYPE = AttributesEnum.FileContentType.index();
    public static final int RFRTDOCNO = AttributesEnum.RfrtDocNo.index();
    public static final int AGENTSTIPEND = AttributesEnum.AgentStipend.index();
    public static final int WORKFLOWNOTIFICATIONID = AttributesEnum.WorkflowNotificationId.index();
    public static final int WORKFLOWSTATUS = AttributesEnum.WorkflowStatus.index();
    public static final int PLANTRANSFERHDRIDFK = AttributesEnum.PlanTransferHdrIdFk.index();
    public static final int GISLOCATIONIDFK = AttributesEnum.GisLocationIdFk.index();
    public static final int DSSREQRESIGTERMLINE = AttributesEnum.DssReqResigTermLine.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DssReqResigTermHeaderImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("pqt.dss.rfrt.model.eo.DssReqResigTermHeader");
    }


    /**
     * Gets the attribute value for RfrtHeaderIdPk, using the alias name RfrtHeaderIdPk.
     * @return the value of RfrtHeaderIdPk
     */
    public Number getRfrtHeaderIdPk() {
        return (Number) getAttributeInternal(RFRTHEADERIDPK);
    }

    /**
     * Sets <code>value</code> as the attribute value for RfrtHeaderIdPk.
     * @param value value to set the RfrtHeaderIdPk
     */
    public void setRfrtHeaderIdPk(Number value) {
        setAttributeInternal(RFRTHEADERIDPK, value);
    }

    /**
     * Gets the attribute value for AgentNoFk, using the alias name AgentNoFk.
     * @return the value of AgentNoFk
     */
    public Number getAgentNoFk() {
        return (Number) getAttributeInternal(AGENTNOFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for AgentNoFk.
     * @param value value to set the AgentNoFk
     */
    public void setAgentNoFk(Number value) {
        setAttributeInternal(AGENTNOFK, value);
    }

    /**
     * Gets the attribute value for RankCodeFk, using the alias name RankCodeFk.
     * @return the value of RankCodeFk
     */
    public String getRankCodeFk() {
        return (String) getAttributeInternal(RANKCODEFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for RankCodeFk.
     * @param value value to set the RankCodeFk
     */
    public void setRankCodeFk(String value) {
        setAttributeInternal(RANKCODEFK, value);
    }

    /**
     * Gets the attribute value for ManagerIdFk, using the alias name ManagerIdFk.
     * @return the value of ManagerIdFk
     */
    public Number getManagerIdFk() {
        return (Number) getAttributeInternal(MANAGERIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for ManagerIdFk.
     * @param value value to set the ManagerIdFk
     */
    public void setManagerIdFk(Number value) {
        setAttributeInternal(MANAGERIDFK, value);
    }

    /**
     * Gets the attribute value for BranchCodeFk, using the alias name BranchCodeFk.
     * @return the value of BranchCodeFk
     */
    public String getBranchCodeFk() {
        return (String) getAttributeInternal(BRANCHCODEFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for BranchCodeFk.
     * @param value value to set the BranchCodeFk
     */
    public void setBranchCodeFk(String value) {
        setAttributeInternal(BRANCHCODEFK, value);
    }

    /**
     * Gets the attribute value for RegionCodeFk, using the alias name RegionCodeFk.
     * @return the value of RegionCodeFk
     */
    public String getRegionCodeFk() {
        return (String) getAttributeInternal(REGIONCODEFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for RegionCodeFk.
     * @param value value to set the RegionCodeFk
     */
    public void setRegionCodeFk(String value) {
        setAttributeInternal(REGIONCODEFK, value);
    }

    /**
     * Gets the attribute value for JoiningDate, using the alias name JoiningDate.
     * @return the value of JoiningDate
     */
    public Date getJoiningDate() {
        return (Date) getAttributeInternal(JOININGDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for JoiningDate.
     * @param value value to set the JoiningDate
     */
    public void setJoiningDate(Date value) {
        setAttributeInternal(JOININGDATE, value);
    }

    /**
     * Gets the attribute value for LastRankDate, using the alias name LastRankDate.
     * @return the value of LastRankDate
     */
    public Date getLastRankDate() {
        return (Date) getAttributeInternal(LASTRANKDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastRankDate.
     * @param value value to set the LastRankDate
     */
    public void setLastRankDate(Date value) {
        setAttributeInternal(LASTRANKDATE, value);
    }

    /**
     * Gets the attribute value for MonthSalaryDrawn, using the alias name MonthSalaryDrawn.
     * @return the value of MonthSalaryDrawn
     */
    public Number getMonthSalaryDrawn() {
        return (Number) getAttributeInternal(MONTHSALARYDRAWN);
    }

    /**
     * Sets <code>value</code> as the attribute value for MonthSalaryDrawn.
     * @param value value to set the MonthSalaryDrawn
     */
    public void setMonthSalaryDrawn(Number value) {
        setAttributeInternal(MONTHSALARYDRAWN, value);
    }

    /**
     * Gets the attribute value for CurrentQtr, using the alias name CurrentQtr.
     * @return the value of CurrentQtr
     */
    public Number getCurrentQtr() {
        return (Number) getAttributeInternal(CURRENTQTR);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrentQtr.
     * @param value value to set the CurrentQtr
     */
    public void setCurrentQtr(Number value) {
        setAttributeInternal(CURRENTQTR, value);
    }

    /**
     * Gets the attribute value for YearToDate, using the alias name YearToDate.
     * @return the value of YearToDate
     */
    public Date getYearToDate() {
        return (Date) getAttributeInternal(YEARTODATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for YearToDate.
     * @param value value to set the YearToDate
     */
    public void setYearToDate(Date value) {
        setAttributeInternal(YEARTODATE, value);
    }

    /**
     * Gets the attribute value for ActiveConsultants, using the alias name ActiveConsultants.
     * @return the value of ActiveConsultants
     */
    public Number getActiveConsultants() {
        return (Number) getAttributeInternal(ACTIVECONSULTANTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActiveConsultants.
     * @param value value to set the ActiveConsultants
     */
    public void setActiveConsultants(Number value) {
        setAttributeInternal(ACTIVECONSULTANTS, value);
    }

    /**
     * Gets the attribute value for RequestType, using the alias name RequestType.
     * @return the value of RequestType
     */
    public String getRequestType() {
        return (String) getAttributeInternal(REQUESTTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RequestType.
     * @param value value to set the RequestType
     */
    public void setRequestType(String value) {
        setAttributeInternal(REQUESTTYPE, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the value of Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for RequestReason, using the alias name RequestReason.
     * @return the value of RequestReason
     */
    public String getRequestReason() {
        return (String) getAttributeInternal(REQUESTREASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for RequestReason.
     * @param value value to set the RequestReason
     */
    public void setRequestReason(String value) {
        setAttributeInternal(REQUESTREASON, value);
    }

    /**
     * Gets the attribute value for ResignationLetter, using the alias name ResignationLetter.
     * @return the value of ResignationLetter
     */
    public String getResignationLetter() {
        return (String) getAttributeInternal(RESIGNATIONLETTER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ResignationLetter.
     * @param value value to set the ResignationLetter
     */
    public void setResignationLetter(String value) {
        setAttributeInternal(RESIGNATIONLETTER, value);
    }

    /**
     * Gets the attribute value for UserIdFk, using the alias name UserIdFk.
     * @return the value of UserIdFk
     */
    public Number getUserIdFk() {
        return (Number) getAttributeInternal(USERIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserIdFk.
     * @param value value to set the UserIdFk
     */
    public void setUserIdFk(Number value) {
        setAttributeInternal(USERIDFK, value);
    }

    /**
     * Gets the attribute value for EnterDate, using the alias name EnterDate.
     * @return the value of EnterDate
     */
    public Date getEnterDate() {
        return (Date) getAttributeInternal(ENTERDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EnterDate.
     * @param value value to set the EnterDate
     */
    public void setEnterDate(Date value) {
        setAttributeInternal(ENTERDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the value of LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for BranchStatus, using the alias name BranchStatus.
     * @return the value of BranchStatus
     */
    public String getBranchStatus() {
        return (String) getAttributeInternal(BRANCHSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for BranchStatus.
     * @param value value to set the BranchStatus
     */
    public void setBranchStatus(String value) {
        setAttributeInternal(BRANCHSTATUS, value);
    }

    /**
     * Gets the attribute value for DssStatus, using the alias name DssStatus.
     * @return the value of DssStatus
     */
    public String getDssStatus() {
        return (String) getAttributeInternal(DSSSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for DssStatus.
     * @param value value to set the DssStatus
     */
    public void setDssStatus(String value) {
        setAttributeInternal(DSSSTATUS, value);
    }

    /**
     * Gets the attribute value for BranchNotifIdFk, using the alias name BranchNotifIdFk.
     * @return the value of BranchNotifIdFk
     */
    public Number getBranchNotifIdFk() {
        return (Number) getAttributeInternal(BRANCHNOTIFIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for BranchNotifIdFk.
     * @param value value to set the BranchNotifIdFk
     */
    public void setBranchNotifIdFk(Number value) {
        setAttributeInternal(BRANCHNOTIFIDFK, value);
    }

    /**
     * Gets the attribute value for DssNotifIdFk, using the alias name DssNotifIdFk.
     * @return the value of DssNotifIdFk
     */
    public Number getDssNotifIdFk() {
        return (Number) getAttributeInternal(DSSNOTIFIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for DssNotifIdFk.
     * @param value value to set the DssNotifIdFk
     */
    public void setDssNotifIdFk(Number value) {
        setAttributeInternal(DSSNOTIFIDFK, value);
    }

    /**
     * Gets the attribute value for PersonType, using the alias name PersonType.
     * @return the value of PersonType
     */
    public String getPersonType() {
        return (String) getAttributeInternal(PERSONTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PersonType.
     * @param value value to set the PersonType
     */
    public void setPersonType(String value) {
        setAttributeInternal(PERSONTYPE, value);
    }

    /**
     * Gets the attribute value for ResignationFile, using the alias name ResignationFile.
     * @return the value of ResignationFile
     */
    public BlobDomain getResignationFile() {
        return (BlobDomain) getAttributeInternal(RESIGNATIONFILE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ResignationFile.
     * @param value value to set the ResignationFile
     */
    public void setResignationFile(BlobDomain value) {
        setAttributeInternal(RESIGNATIONFILE, value);
    }

    /**
     * Gets the attribute value for FileContentType, using the alias name FileContentType.
     * @return the value of FileContentType
     */
    public String getFileContentType() {
        return (String) getAttributeInternal(FILECONTENTTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FileContentType.
     * @param value value to set the FileContentType
     */
    public void setFileContentType(String value) {
        setAttributeInternal(FILECONTENTTYPE, value);
    }

    /**
     * Gets the attribute value for RfrtDocNo, using the alias name RfrtDocNo.
     * @return the value of RfrtDocNo
     */
    public String getRfrtDocNo() {
        return (String) getAttributeInternal(RFRTDOCNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for RfrtDocNo.
     * @param value value to set the RfrtDocNo
     */
    public void setRfrtDocNo(String value) {
        setAttributeInternal(RFRTDOCNO, value);
    }


    /**
     * Gets the attribute value for AgentStipend, using the alias name AgentStipend.
     * @return the value of AgentStipend
     */
    public String getAgentStipend() {
        return (String) getAttributeInternal(AGENTSTIPEND);
    }

    /**
     * Sets <code>value</code> as the attribute value for AgentStipend.
     * @param value value to set the AgentStipend
     */
    public void setAgentStipend(String value) {
        setAttributeInternal(AGENTSTIPEND, value);
    }

    /**
     * Gets the attribute value for WorkflowNotificationId, using the alias name WorkflowNotificationId.
     * @return the value of WorkflowNotificationId
     */
    public Number getWorkflowNotificationId() {
        return (Number) getAttributeInternal(WORKFLOWNOTIFICATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for WorkflowNotificationId.
     * @param value value to set the WorkflowNotificationId
     */
    public void setWorkflowNotificationId(Number value) {
        setAttributeInternal(WORKFLOWNOTIFICATIONID, value);
    }

    /**
     * Gets the attribute value for WorkflowStatus, using the alias name WorkflowStatus.
     * @return the value of WorkflowStatus
     */
    public String getWorkflowStatus() {
        return (String) getAttributeInternal(WORKFLOWSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for WorkflowStatus.
     * @param value value to set the WorkflowStatus
     */
    public void setWorkflowStatus(String value) {
        setAttributeInternal(WORKFLOWSTATUS, value);
    }

    /**
     * Gets the attribute value for PlanTransferHdrIdFk, using the alias name PlanTransferHdrIdFk.
     * @return the value of PlanTransferHdrIdFk
     */
    public Number getPlanTransferHdrIdFk() {
        return (Number) getAttributeInternal(PLANTRANSFERHDRIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for PlanTransferHdrIdFk.
     * @param value value to set the PlanTransferHdrIdFk
     */
    public void setPlanTransferHdrIdFk(Number value) {
        setAttributeInternal(PLANTRANSFERHDRIDFK, value);
    }

    /**
     * Gets the attribute value for GisLocationIdFk, using the alias name GisLocationIdFk.
     * @return the value of GisLocationIdFk
     */
    public Number getGisLocationIdFk() {
        return (Number) getAttributeInternal(GISLOCATIONIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for GisLocationIdFk.
     * @param value value to set the GisLocationIdFk
     */
    public void setGisLocationIdFk(Number value) {
        setAttributeInternal(GISLOCATIONIDFK, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getDssReqResigTermLine() {
        return (RowIterator) getAttributeInternal(DSSREQRESIGTERMLINE);
    }


    /**
     * @param rfrtHeaderIdPk key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number rfrtHeaderIdPk) {
        return new Key(new Object[] { rfrtHeaderIdPk });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
     protected void create(AttributeList attributeList) {
         super.create(attributeList);
         Date currentDate = new Date();
         setEnterDate((Date) currentDate.getCurrentDate());
         setLastUpdatedDate((Date) currentDate.getCurrentDate());
         SequenceImpl seq = new SequenceImpl("DSS_REQ_RESIG_TERM_HEADER_SEQ", getDBTransaction());
         setRfrtHeaderIdPk(seq.getSequenceNumber());
         
         setBranchStatus("INCOMPLETE");
         setDssStatus("INCOMPLETE");
         ViewObject vo=getDBTransaction().getRootApplicationModule().findViewObject("ReqResUserLocVO");
         if (vo!=null)
           {
                   vo.remove();
           }         
         FacesContext fctx = FacesContext.getCurrentInstance();
         ExternalContext ectx = fctx.getExternalContext();
         HttpSession userSession = (HttpSession) ectx.getSession(false);
         try {
             setUserIdFk(new Number(userSession.getAttribute("pUserId")));
             setLastUpdatedBy(new Number(userSession.getAttribute("pUserId")));
             vo=getDBTransaction().getRootApplicationModule().createViewObjectFromQueryStmt("ReqResUserLocVO", "select  GIS_LOCATION_ID_FK from DSS_SM_USERS WHERE USER_ID_PK="+getUserIdFk());
             vo.executeQuery();
             setGisLocationIdFk(new Number( vo.first().getAttribute(0).toString() ) );             
         } catch (SQLException ex) {
             setUserIdFk(new Number(0));
             setLastUpdatedBy(new Number(0));
         }
     }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_INSERT) {
            DBTransaction txn = getDBTransaction();
            CallableStatement callableStatement =
                txn.createCallableStatement("begin ? := dss_all_pkg.GET_RFRT_NUMBER; end;", DBTransaction.DEFAULT);
            try {
                callableStatement.registerOutParameter(1, Types.VARCHAR);
                callableStatement.executeUpdate();
                String vRfrtNumber = callableStatement.getString(1);
                callableStatement.close();
                setRfrtDocNo(vRfrtNumber);
            } catch (SQLException sqle) {
                try {
                    callableStatement.close();
                } catch (SQLException f) {
                }
            }
        }
        Date currentDate = new Date();
        if (operation == DML_UPDATE) {
            setLastUpdatedDate((Date) currentDate.getCurrentDate());
            FacesContext fctx = FacesContext.getCurrentInstance();
            ExternalContext ectx = fctx.getExternalContext();
            HttpSession userSession = (HttpSession) ectx.getSession(false);
            try {
                setUserIdFk(new Number(userSession.getAttribute("pUserId")));
                setLastUpdatedBy(new Number(userSession.getAttribute("pUserId")));
            } catch (SQLException ex) {
                setUserIdFk(new Number(0));
                setLastUpdatedBy(new Number(0));
            }
        }
        super.doDML(operation, e);
    }
}

