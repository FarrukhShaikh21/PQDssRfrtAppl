package pqt.dss.rfrt.model.eo;



import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jul 19 17:22:30 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DssReqResigTermLineImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        RfrtLineIdPk,
        RfrtHeaderIdFk,
        PortfolioTransferTo,
        PortfolioJustification,
        UserIdFk,
        EnterDate,
        LastUpdatedBy,
        LastUpdatedDate,
        AgentNoFk,
        DssReqResigTermHeader;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int RFRTLINEIDPK = AttributesEnum.RfrtLineIdPk.index();
    public static final int RFRTHEADERIDFK = AttributesEnum.RfrtHeaderIdFk.index();
    public static final int PORTFOLIOTRANSFERTO = AttributesEnum.PortfolioTransferTo.index();
    public static final int PORTFOLIOJUSTIFICATION = AttributesEnum.PortfolioJustification.index();
    public static final int USERIDFK = AttributesEnum.UserIdFk.index();
    public static final int ENTERDATE = AttributesEnum.EnterDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int AGENTNOFK = AttributesEnum.AgentNoFk.index();
    public static final int DSSREQRESIGTERMHEADER = AttributesEnum.DssReqResigTermHeader.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DssReqResigTermLineImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("pqt.dss.rfrt.model.eo.DssReqResigTermLine");
    }


    /**
     * Gets the attribute value for RfrtLineIdPk, using the alias name RfrtLineIdPk.
     * @return the value of RfrtLineIdPk
     */
    public Number getRfrtLineIdPk() {
        return (Number) getAttributeInternal(RFRTLINEIDPK);
    }

    /**
     * Sets <code>value</code> as the attribute value for RfrtLineIdPk.
     * @param value value to set the RfrtLineIdPk
     */
    public void setRfrtLineIdPk(Number value) {
        setAttributeInternal(RFRTLINEIDPK, value);
    }

    /**
     * Gets the attribute value for RfrtHeaderIdFk, using the alias name RfrtHeaderIdFk.
     * @return the value of RfrtHeaderIdFk
     */
    public Number getRfrtHeaderIdFk() {
        return (Number) getAttributeInternal(RFRTHEADERIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for RfrtHeaderIdFk.
     * @param value value to set the RfrtHeaderIdFk
     */
    public void setRfrtHeaderIdFk(Number value) {
        setAttributeInternal(RFRTHEADERIDFK, value);
    }

    /**
     * Gets the attribute value for PortfolioTransferTo, using the alias name PortfolioTransferTo.
     * @return the value of PortfolioTransferTo
     */
    public String getPortfolioTransferTo() {
        return (String) getAttributeInternal(PORTFOLIOTRANSFERTO);
    }

    /**
     * Sets <code>value</code> as the attribute value for PortfolioTransferTo.
     * @param value value to set the PortfolioTransferTo
     */
    public void setPortfolioTransferTo(String value) {
        setAttributeInternal(PORTFOLIOTRANSFERTO, value);
    }

    /**
     * Gets the attribute value for PortfolioJustification, using the alias name PortfolioJustification.
     * @return the value of PortfolioJustification
     */
    public String getPortfolioJustification() {
        return (String) getAttributeInternal(PORTFOLIOJUSTIFICATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for PortfolioJustification.
     * @param value value to set the PortfolioJustification
     */
    public void setPortfolioJustification(String value) {
        setAttributeInternal(PORTFOLIOJUSTIFICATION, value);
    }

    /**
     * Gets the attribute value for UserIdFk, using the alias name UserIdFk.
     * @return the value of UserIdFk
     */
    public Number getUserIdFk() {
        return (Number) getAttributeInternal(USERIDFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserIdFk.
     * @param value value to set the UserIdFk
     */
    public void setUserIdFk(Number value) {
        setAttributeInternal(USERIDFK, value);
    }

    /**
     * Gets the attribute value for EnterDate, using the alias name EnterDate.
     * @return the value of EnterDate
     */
    public Date getEnterDate() {
        return (Date) getAttributeInternal(ENTERDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EnterDate.
     * @param value value to set the EnterDate
     */
    public void setEnterDate(Date value) {
        setAttributeInternal(ENTERDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the value of LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for AgentNoFk, using the alias name AgentNoFk.
     * @return the value of AgentNoFk
     */
    public Number getAgentNoFk() {
        return (Number) getAttributeInternal(AGENTNOFK);
    }

    /**
     * Sets <code>value</code> as the attribute value for AgentNoFk.
     * @param value value to set the AgentNoFk
     */
    public void setAgentNoFk(Number value) {
        setAttributeInternal(AGENTNOFK, value);
    }

    /**
     * @return the associated entity DssReqResigTermHeaderImpl.
     */
    public DssReqResigTermHeaderImpl getDssReqResigTermHeader() {
        return (DssReqResigTermHeaderImpl) getAttributeInternal(DSSREQRESIGTERMHEADER);
    }

    /**
     * Sets <code>value</code> as the associated entity DssReqResigTermHeaderImpl.
     */
    public void setDssReqResigTermHeader(DssReqResigTermHeaderImpl value) {
        setAttributeInternal(DSSREQRESIGTERMHEADER, value);
    }


    /**
     * @param rfrtLineIdPk key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number rfrtLineIdPk) {
        return new Key(new Object[] { rfrtLineIdPk });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

